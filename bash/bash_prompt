#!/bin/bash

export CLICOLOR=1
export GREP_OPTIONS='--color=auto'

tput sgr 0 0

RESETCOLOR="\e[0m";
BLACK="\e[0;30m";
BLACKBOLD="\e[1;30m";
RED="\e[0;31m";
REDBOLD="\e[1;31m";
GREEN="\e[0;32m";
GREENBOLD="\e[1;32m";
YELLOW="\e[0;33m";
YELLOWBOLD="\e[1;33m";
BLUE="\e[0;34m";
BLUEBOLD="\e[1;34m";
PURPLE="\e[0;35m";
PURPLEBOLD="\e[1;35m";
CYAN="\e[0;36m";
CYANBOLD="\e[1;36m";
WHITE="\e[0;37m";
WHITEBOLD="\e[1;37m";

prompt_git() {
  local s='';
  local branchName='';

  if [ $(git rev-parse --is-inside-work-tree &>/dev/null; echo "${?}") == '0' ]; then
    if [ "$(git rev-parse --is-inside-git-dir 2> /dev/null)" == 'false' ]; then
      git update-index --really-refresh -q &>/dev/null;

      if ! $(git diff --quiet --ignore-submodules --cached); then
        s+='+';
      fi;

      if ! $(git diff-files --quiet --ignore-submodules --); then
        s+='!';
      fi;

      if [ -n "$(git ls-files --others --exclude-standard)" ]; then
        s+='?';
      fi;

      if $(git rev-parse --verify refs/stash &>/dev/null); then
        s+='$';
      fi;
    fi;

    branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
			git rev-parse --short HEAD 2> /dev/null || \
			echo '(unknown)')";
    
    [ -n "${s}" ] && s=" [${s}]";

    echo -e "${1}${branchName}${2}${s}";
  else
    return;
  fi;
}

PS1="\[\033]0;\W\007\]";
PS1+="\n";
PS1+="\[${BLUE}\][\d \t]\n\[${GREEN}\]\u"
PS1+="\[${GREENBOLD}\] at ";
PS1+="\[${GREEN}\]\h";
PS1+="\[${GREENBOLD}\] in ";
PS1+="\[${PURPLE}\]\w";
PS1+="\$(prompt_git \"\[${GREENBOLD}\] on \[${REDBOLD}\]\" \"\[${REDBOLD}\]\")";
PS1+="\n";
PS1+="\[${PURPLEBOLD}\]$ \[${RESETCOLOR}\]";
export PS1;

PS2="\[${YELLOW}\]â†’ \[${RESETCOLOR}\]";
export PS2;
